# This is an example of using Composite Run Steps Actions

name: function-app-deployment

on: [workflow_dispatch]

env:
  ROOT_PATH: './azure-function/azure-function'     
  DOTNET_VERSION: '6.0.x'  
  
jobs:
  function_app_build:
    runs-on: ubuntu-latest
    name: function app build
    
    steps:
    - uses: actions/checkout@v2
    
    - id: function_app_build
      uses: krishrocks1904/azure-function-deplo-99/function-app-build@fv7
      with:
        environment_name: 'dev01'
        azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
        azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        client_id:  ${{ secrets.AZURE_CLIENT_ID }}
        client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}
        resource_group_name: 'demo-rg'
        function_app_name: 'function-demo-001'
        LOCATION_ABBREVIATION: 'uks'
        source_directory: ${{ env.ROOT_PATH }}
        DOTNET_VERSION:  ${{ env.DOTNET_VERSION }}
   
  deploy_dev:
    name: dev
    runs-on: ubuntu-latest
    needs: [function_app_build]
    environment:
      name: 'Development'
      url: ${{ steps.functionsaction.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: function-app
          path: ${{ env.ROOT_PATH }}/src
          
      - name: Login via Az module
        id: login
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
          enable-AzPSSession: true
        
      - name: Get Publishing Profile
        id: getpublishingprofile
        uses: azure/powershell@v1
        with:
          inlineScript: |
            $profile = Get-AzWebAppPublishingProfile `
                -ResourceGroupName ${{ inputs.resource_group_name }} `
                -Name ${{ inputs.function_app_name }} 
            $profile = $profile.Replace("`r", "").Replace("`n", "")
            Write-Output "::set-output name=profile::$profile"
          azPSVersion: latest
          
      - name: deploy az-function
        uses: Azure/functions-action@v1.3.2
        id: functionsaction
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'          
          publish-profile: ${{ steps.getpublishingprofile.outputs.profile }}
